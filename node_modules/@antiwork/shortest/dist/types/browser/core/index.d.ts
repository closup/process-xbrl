import { BrowserToolOptions, ActionInput, ToolResult } from '../../types/browser';
import { BetaToolType } from '../../types/browser';
export declare class ToolError extends Error {
    constructor(message: string);
}
export declare abstract class BaseBrowserTool {
    protected width: number;
    protected height: number;
    protected displayNum: number;
    protected screenshotDelay: number;
    protected readonly toolType: BetaToolType;
    protected readonly toolName: string;
    constructor(options: BrowserToolOptions);
    abstract execute(input: ActionInput): Promise<ToolResult>;
    abstract toToolParameters(): {
        type: BetaToolType;
        name: string;
        display_width_px: number;
        display_height_px: number;
        display_number: number;
    };
    protected validateCoordinates(x: number, y: number): void;
    protected formatToolResult(output?: string, error?: string, base64_image?: string, metadata?: ToolResult['metadata']): ToolResult;
}
